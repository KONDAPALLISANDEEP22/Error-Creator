Problem Statement: You are competing in a basketball contest. In this contest the score for each successful shot depends on both the distance from the basket and the player's position. The ball is shot N times, successfully. You are given an array A containing the distance of a player from basket for N shots. The index of array represents the position of the player. Score is calculated by multiplying the position with the distance from the basket.
Your task is to find and return an integer value, representing the maximum possible score you can achieve by choosing a contiguous subarray of size K from the given array.

goles=int(input())
size=int(input())
1-list(map(int, input().split()))
max=0
for i in range(0,len(1)):
    sub=1[i:i+size]
    k=1
    s=0
    for j in sub:
        s+=(j*k)
        k+=1
        if s > max:
            max=s
print(max)
